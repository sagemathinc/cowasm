include ../build/Makefile-vars

# See https://github.com/numpy/numpy/releases
VERSION=1.23.4

URL = https://github.com/numpy/numpy/releases/download/v${VERSION}/numpy-${VERSION}.tar.gz

TARBALL = ${UPSTREAM}/numpy-${VERSION}.tar.gz

CYTHON = ${PACKAGES}/py-cython/dist/wasm

all: wasm

include ../build/Makefile-rules

# NOTES:
#   - we put fake-bin at the front of the PATH, since build/wasm/numpy/distutils/system_info.py
#     explicitly tries to call gcc on the system to get info about the system, and this will hang
#     or be very misleading.  Instead we put a fake gcc that runs the zig clang wasm32-wasi
#     cross compiler.

export PATH := ${SRC}/fake-bin:$(PATH)


${BUILD_WASM}/.patched: ${BUILD_WASM}/.build
	cd ${BUILD_WASM} \
		&& cat ${SRC}/patches/01-ENH-Add-support-for-platforms-with-missing-fenv-flag.patch | patch -p1 \
		&& cat ${SRC}/patches/03-disable-complex.patch | patch -p1 \
		&& cat ${SRC}/patches/04-random-no-lm.patch | patch -p1 \
		&& cat ${SRC}/patches/05-no-backtrace.patch | patch -p1 \
		&& echo "" > numpy/core/include/setjmp.h \
		&& echo "" > numpy/core/include/execinfo.h
	touch ${BUILD_WASM}/.patched

# NOTES:
#  - We have to include  numpy/core/multiarray.py in addition to the automatic
#    numpy/core/multiarray.pyc, since numpy uses __doc__ attributes from
#    things in  numpy/core/multiarray.py to create the docstrings on the
#    numpy module, and that data seems to not be in the pyc file.
#  - We do not include numpy headers.  They are needed for building other packages, e.g.,
#    pandas or a Demo about numpy in the Cython source.  Instead, for *building* packages
#    we also use `python-wasm setup.py install` to install numpy to site-packages in the cpython package.
#    Basically a full build-from source dev setup is needed for building packages from source.
#  - We do NOT use cowasm-opt, since it makes the so *larger*.
#  - We "python setup.py install" (and not just build) because dependencies
#    such as pandas expect a full install in place (with all headers) in
#    order to compile themselves.
${BUILD_WASM}/.install: ${BUILD_WASM}/.patched
	mkdir -p ${DIST_WASM}
	cd ${PACKAGES}/cpython && make pip
	cd ${BUILD_WASM} \
		&& python-wasm setup.py install
	touch ${BUILD_WASM}/.install

${DIST_WASM}/.built: ${BUILD_WASM}/.install
	cd ${BUILD_WASM}/build/lib* \
		&& rm -rf numpy/core/include \
		&& python-native -m cowasm_bundler numpy numpy/core/multiarray.py  \
		&& mkdir -p ${DIST_WASM} \
		&& cp numpy.tar.xz ${DIST_WASM}
	touch ${DIST_WASM}/.built

# Just a trivial test for now.
test: ${DIST_WASM}/.built
	rm -rf ${BUILD_WASM}/cowasm-test
	mkdir -p ${BUILD_WASM}/cowasm-test
	@cd ${BUILD_WASM}/cowasm-test \
		&& python-wasm -c "import numpy; print(numpy.array([3,8,9,5,0,7,7]).sum())" | grep 39 \
		&& echo "NUMPY TEST PASSED!"

${DIST_NATIVE}/.built: ${BUILD_NATIVE}/.build
	# nothing for now
	touch ${DIST_NATIVE}/.built

