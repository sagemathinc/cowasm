# Look in build/wasm/Modules/Setup for adding modules here.  NOTE in some cases we
# are only adding things here because they are explicitly removed for the emscripten
# and WASI targets in configure.ac.  A better approach might be a new target...

# When you add something here to static, the actual static library that needs to be linked in
# *MUST* be added to packages/python-wasm/Makefile for the python.wasm target.  That's
# where the important linking actually happens.

*static*


# This _posixsubprocess MUST be built into the core statically since it calls
# code that we can't link into the host python.wasm since it isn't used otherwise,
# e.g., the function _Py_closerange(int first, int last) in Python/fileutils.c,
# which isn't otherwise in the public API.  When it tries to call that (when doing exec)
# in share so module, we get a segfault.
_posixsubprocess _posixsubprocess.c

*shared*

_decimal _decimal/_decimal.c

pyexpat pyexpat.c

# OpenSSL bindings
_ssl _ssl.c -DOPENSSL_THREADS -I$(abs_srcdir)/../../../openssl/dist/wasm/include $(abs_srcdir)/../../../openssl/dist/wasm/lib/libssl.a $(abs_srcdir)/../../../openssl/dist/wasm/lib/libcrypto.a

# TODO: _hashlib causes trouble and so far not needed.  Python has its own smaller version and this is huge.
# More importantly, having it breaks things.  In particular "import hashlib, ssl" then exit
# and get WebAssembly crash.
# _hashlib _hashopenssl.c -DOPENSSL_THREADS -I$(abs_srcdir)/../../../openssl/dist/wasm/include $(abs_srcdir)/../../../openssl/dist/wasm/lib/libcrypto.a

# text encodings and unicode

# These are *HUGE* and well worth moving out of the core wasm bundle.
_codecs_cn cjkcodecs/_codecs_cn.c
_codecs_hk cjkcodecs/_codecs_hk.c
_codecs_iso2022 cjkcodecs/_codecs_iso2022.c
_codecs_jp cjkcodecs/_codecs_jp.c
_codecs_kr cjkcodecs/_codecs_kr.c
_codecs_tw cjkcodecs/_codecs_tw.c

# This one has one failing test involving os.unlink if we make it shared.
# We will revisit this, since it might be a sign of a bug in dylink.
# That said, this module is only 22k, so shouldn't be dynamic.
#_multibytecodec cjkcodecs/multibytecodec.c

unicodedata unicodedata.c

# _pickle and _datetime together would save a little under 50K zipped,
# and are not needed at startup, but they cause a break.  When we build
# either of them shared, for some reason we get issues with
# _PyRuntime not being defined.  It's not worth it to debug given the
# small savings, and that cPython doesn't encourage these to be dynamic,
# and maybe it isn't supported.
# _datetime _datetimemodule.c
# _pickle _pickle.c


readline readline.c -I$(abs_srcdir)/../../../libedit/dist/wasm/include $(abs_srcdir)/../../../libedit/dist/wasm/lib/libedit.a $(abs_srcdir)/../../../termcap/dist/wasm/lib/libtermcap.a


# Curses

_curses _cursesmodule.c -I$(abs_srcdir)/../../../ncurses/dist/wasm/include -I$(abs_srcdir)/../../../ncurses/dist/wasm/include/ncurses $(abs_srcdir)/../../../ncurses/dist/wasm/lib/libncurses.a $(abs_srcdir)/../../../termcap/dist/wasm/lib/libtermcap.a
_curses_panel _curses_panel.c  -I$(abs_srcdir)/../../../ncurses/dist/wasm/include -I$(abs_srcdir)/../../../ncurses/dist/wasm/include/ncurses  $(abs_srcdir)/../../../ncurses/dist/wasm/lib/libncurses.a $(abs_srcdir)/../../../termcap/dist/wasm/lib/libtermcap.a


# Using GNU readline doesn't work.  Anyway, it is bigger, more complicated, GPL'd, and **the code is harder to read**.
#readline readline.c -I$(abs_srcdir)/../../../readline/dist/wasm/include $(abs_srcdir)/../../../readline/dist/wasm/lib/libreadline.a $(abs_srcdir)/../../../termcap/dist/wasm/lib/libtermcap.a

_bz2 _bz2module.c -I$(abs_srcdir)/../../../bzip2/dist/wasm/include/ $(abs_srcdir)/../../../bzip2/dist/wasm/lib/libbz2.a

zlib  zlibmodule.c -I$(abs_srcdir)/../../../zlib/dist/wasm/include $(abs_srcdir)/../../../zlib/dist/wasm/lib/libz.a

_lzma _lzmamodule.c -I$(abs_srcdir)/../../../lzma/dist/wasm/include/ $(abs_srcdir)/../../../lzma/dist/wasm/lib/liblzma.a

_sqlite3 _sqlite/blob.c _sqlite/connection.c _sqlite/cursor.c _sqlite/microprotocols.c _sqlite/module.c _sqlite/prepare_protocol.c _sqlite/row.c _sqlite/statement.c  _sqlite/util.c -I$(abs_srcdir)/../../../sqlite/dist/wasm/include/ $(abs_srcdir)/../../../sqlite/dist/wasm/lib/libsqlite3.a

mmap mmapmodule.c

termios termios.c

_json _json.c

