include ../build/Makefile-vars

# https://github.com/pandas-dev/pandas/releases
VERSION=1.5.1

URL = https://github.com/pandas-dev/pandas/releases/download/v${VERSION}/pandas-${VERSION}.tar.gz

TARBALL = ${UPSTREAM}/pandas-${VERSION}.tar.gz

CYTHON = ${PACKAGES}/py-cython/dist/wasm

all: wasm

include ../build/Makefile-rules

${BUILD_WASM}/.patched: ${BUILD_WASM}/.build
	cd ${BUILD_WASM} \
		&& cat ${SRC}/patches/00-no-ctypes.patch | patch -p1
	touch ${BUILD_WASM}/.patched

# TODO: this is a horrible hack right now, but it works (?).
#  - first do the install with setup.py install, but ignore the error
#  - then install deps by doing "pip install pandas", which installs the
#    deps because pandas is already installed.
# This would break if pypi pandas is updated, but we haven't updated our
# package here yet, etc.  Not ideal.  This is just a first step.
${BUILD_WASM}/.install: ${BUILD_WASM}/.patched
	mkdir -p ${DIST_WASM}
	cd ${PACKAGES}/cpython && make pip
	cd ${BUILD_WASM} \
		&& python-wasm setup.py install || true \
		&& python-wasm -m pip install pandas
	touch ${BUILD_WASM}/.install

${DIST_WASM}/.built: ${BUILD_WASM}/.install
	cd ${BUILD_WASM}/build/lib* \
		&& rm -rf pandas/tests \
		&& python-native -m cowasm_bundler pandas \
		&& mkdir -p ${DIST_WASM} \
		&& cp pandas.tar.xz ${DIST_WASM}
	cd ${PACKAGES}/cpython/dist/wasm/lib/python3.11/site-packages \
		&& python-native -m cowasm_bundler pytz pytz/zoneinfo && cp pytz.tar.xz ${DIST_WASM} \
		&& python-native -m cowasm_bundler dateutil dateutil/zoneinfo && cp dateutil.tar.xz ${DIST_WASM} \
		&& mkdir -p six && cp six.py six/__init__.py && python-native -m cowasm_bundler six && cp six.tar.xz ${DIST_WASM}
	touch ${DIST_WASM}/.built

# Just a trivial test for now.
test: ${DIST_WASM}/.built
	rm -rf ${BUILD_WASM}/cowasm-test
	mkdir -p ${BUILD_WASM}/cowasm-test
	@cd ${BUILD_WASM}/cowasm-test \
		&& python-wasm -c "import pandas" \
		&& echo "Trivial PANDAS TEST PASSED!"

