#!/usr/bin/env bash

if [ x"$1" = x"python.wasm" ]; then
    # The python wasm test suite puts "python.wasm" as the first argument, which we don't need.
    shift
fi

# This is used to set the program name of python during initialization in src/python/node.ts
export PROGRAM_NAME="`readlink -f $0`"

# See https://github.com/debug-js/debug/blob/master/README.md#usage-in-child-processes
export DEBUG_COLORS=1

export SCRIPTPATH="$( cd -- "$(dirname "`readlink -f $0`")" >/dev/null 2>&1 ; pwd -P )"

# TODO/WARNING: If you pass no arguments you get the CLI with readline.
# If you pass any arguments, you get no readline.  This is fine for running scripts, i.e.,
# passing foo.py as input (give exact path for now!), but you can't pass any python
# flags in without using the second case below.
# Also, if you write a script foo.py that contains input('name? ') it won't work
# because it's non-interactive.

VERSION=`node --version | cut -c 1-4`
if [ x"$VERSION" = x"v14." ]; then
    # node 14 needs this option; newer versions of node can't have it.
    EXP_OPT="--experimental-wasm-bigint"
fi

# TODO: this script always exits with code 0.  In contrast python-wasm-debug
# properly exits with the correct code.

if [ $# -eq 0 ]; then
    node $EXP_OPT -r "$SCRIPTPATH"/../dist/python/node-terminal.cjs
else
    node $EXP_OPT "$SCRIPTPATH"/../dist/python/node-terminal.cjs "$@"
fi

